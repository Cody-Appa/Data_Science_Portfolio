theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss, labeller = label_parsed)+
xlab(NULL)+
theme(axis.title.x = element_blank())
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "How each DPS stacks up with eachother...excuse my pun") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~'Boss', labeller = label_parsed)+
xlab(NULL)+
theme(axis.title.x = element_blank())
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "How each DPS stacks up with eachother...excuse my pun") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~`Boss`, labeller = label_parsed)+
xlab(NULL)+
theme(axis.title.x = element_blank())
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "Single Target")
ggplot(DPSsheet_AOE, aes(x = reorder(Class, -Appearance, FUN = sum), y = Appearance, fill = Fight.Type)) +
geom_col(fill = "#709BE1") +
labs(title = "Which DPS is Best in Single Target Situations",
caption = "Times each class appears in the top 10 ranking in Single Target fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "How each DPS stacks up with eachother...excuse my pun") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "How each DPS stacks up with eachother...excuse my pun") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "How each DPS stacks up with eachother...excuse my pun") +
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "How each DPS stacks up with eachother...excuse my pun") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())
suppressPackageStartupMessages(library(tidyverse))
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
DPSsheet<-read.csv("DataVizMidterm - Sheet1.csv")
suppressPackageStartupMessages(library(scales))
library(scales)
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scientific_format())
DPSsheet$Class <- factor(DPSsheet$Class)
ggplot(DPSsheet, aes(x=Boss, y=DPS, color = Class)) +
geom_point()+
labs(title = "Top DPS by class per Boss", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scientific_format())+
scale_color_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "How each DPS stacks up with eachother...excuse my pun") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "How each DPS stacks up with eachother...excuse my pun") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+ # set x-axis labels to blank
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+ # set x-axis labels to blank
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(scales))
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
library(scales)
DPSsheet<-read.csv("DataVizMidterm - Sheet1.csv")
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+ # set x-axis labels to blank
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())
ggplot(DPSsheet, aes(x=Fight.Type, y=DPS, fill = Class)) +
geom_violin()+
labs(title = "Top DPS by class per Fight Type", caption = "Which dps is best based on the encounter type") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scientific_format())+
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x=Fight.Type, y=DPS, color = Class)) +
geom_point()+
labs(title = "Top DPS by class per Fight Type", caption = "Which classes are best based on the encounter type") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scientific_format())+
scale_color_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+ # set x-axis labels to blank
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())+
scale_color_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+ # set x-axis labels to blank
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())+
fill_color_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+ # set x-axis labels to blank
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())+
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x=Fight.Type, y=Rank, fill = Class)) +
geom_col()+
labs(title = "Rankings Per Fight Type", caption = "DPS rankings per boss fight type") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x=Class, y=Appearance, fill = Fight.Type)) +
geom_col()+
labs(title = "Which DPS is Best in Each Situation", caption = "Times each class appears in the top 10 ranking per fight type", y="Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(DPSsheet, aes(x=Class, y=Appearance, fill = Fight.Type)) +
geom_col()+
labs(title = "Which DPS is Best in Each Situation", caption = "Times each class appears in the top 10 ranking per fight type", y="Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
facet_wrap(~Fight.Type)
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "AOE")
ggplot(DPSsheet_AOE, aes(x = Class, y = Appearance, fill = Fight.Type)) +
geom_col() +
labs(title = "Which DPS is Best in AOE Situations",
caption = "Times each class appears in the top 10 ranking in AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "Single Target")
ggplot(DPSsheet_AOE, aes(x = reorder(Class, -Appearance, FUN = sum), y = Appearance, fill = Fight.Type)) +
geom_col(fill = "#709BE1") +
labs(title = "Which DPS is Best in Single Target Situations",
caption = "Times each class appears in the top 10 ranking in Single Target fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "Mixed")
ggplot(DPSsheet_AOE, aes(x = Class, y = Appearance, fill = Fight.Type)) +
geom_col(fill = "#54D16C") +
labs(title = "Which DPS is Best in Mixed Situations",
caption = "Times each class appears in the top 10 ranking in mixed single target and AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+ # set x-axis labels to blank
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())+
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "AOE")
ggplot(DPSsheet_AOE, aes(x = Class, y = Appearance, fill = Fight.Type)) +
geom_col() +
labs(title = "Which DPS is Best in AOE Situations",
caption = "Times each class appears in the top 10 ranking in AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "AOE")
ggplot(DPSsheet_AOE, aes(x = Class, y = Appearance, fill = Fight.Type)) +
geom_col() +
scale_y_continuous(limits = c(0, max(DPSsheet_AOE$Appearance))) + # set y-axis limits to include zero
labs(title = "Which DPS is Best in AOE Situations",
caption = "Times each class appears in the top 10 ranking in AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "AOE")
ggplot(DPSsheet_AOE, aes(x = Class, y = Appearance, fill = Fight.Type)) +
geom_col() +
labs(title = "Which DPS is Best in AOE Situations",
caption = "Times each class appears in the top 10 ranking in AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "AOE")
ggplot(DPSsheet_AOE, aes(x = Class, y = Appearance, fill = Fight.Type)) +
geom_col() +
labs(title = "Which DPS is Best in AOE Situations",
caption = "Times each class appears in the top 10 ranking in AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "Single Target")
ggplot(DPSsheet_AOE, aes(x = reorder(Class, -Appearance, FUN = sum), y = Appearance, fill = Fight.Type)) +
geom_col(fill = "#709BE1") +
labs(title = "Which DPS is Best in Single Target Situations",
caption = "Times each class appears in the top 10 ranking in Single Target fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "Mixed")
ggplot(DPSsheet_AOE, aes(x = Class, y = Appearance, fill = Fight.Type)) +
geom_col(fill = "#54D16C") +
labs(title = "Which DPS is Best in Mixed Situations",
caption = "Times each class appears in the top 10 ranking in mixed single target and AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())+
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "AOE")
# Create a factor variable for the "Class" column with all levels defined
DPSsheet_AOE$Class <- factor(DPSsheet_AOE$Class, levels = c("Death Knight", "Demon Hunter", "Druid", "Hunter", "Mage", "Monk", "Paladin", "Priest", "Rogue", "Shaman", "Warlock", "Warrior"))
ggplot(DPSsheet_AOE, aes(x = Class, y = Appearance, fill = Fight.Type)) +
geom_col() +
labs(title = "Which DPS is Best in AOE Situations",
caption = "Times each class appears in the top 10 ranking in AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "AOE")
# Create a factor variable for the "Class" column with all levels defined
DPSsheet_AOE$Class <- factor(DPSsheet_AOE$Class, levels = c("Death Knight", "Demon Hunter", "Druid", "Hunter", "Mage", "Monk", "Paladin", "Priest", "Rogue", "Shaman", "Warlock", "Warrior"))
ggplot(DPSsheet_AOE, aes(x = Class, y = Appearance, fill = Fight.Type)) +
geom_col() +
labs(title = "Which DPS is Best in AOE Situations",
caption = "Times each class appears in the top 10 ranking in AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create a factor variable for the "Class" column with all levels defined
DPSsheet_AOE$Class <- factor(DPSsheet_AOE$Class, levels = c("Death Knight", "Demon Hunter", "Druid", "Hunter", "Mage", "Monk", "Paladin", "Priest", "Rogue", "Shaman", "Warlock", "Warrior"))
ggplot(DPSsheet_AOE, aes(x = Class, y = Appearance, fill = Fight.Type)) +
geom_col() +
labs(title = "Which DPS is Best in AOE Situations",
caption = "Times each class appears in the top 10 ranking in AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "AOE")
ggplot(DPSsheet_AOE, aes(x = Class, y = Appearance, fill = Fight.Type)) +
geom_col() +
labs(title = "Which DPS is Best in AOE Situations",
caption = "Times each class appears in the top 10 ranking in AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "Single Target")
ggplot(DPSsheet_AOE, aes(x = reorder(Class, -Appearance, FUN = sum), y = Appearance, fill = Fight.Type)) +
geom_col(fill = "#709BE1") +
labs(title = "Which DPS is Best in Single Target Situations",
caption = "Times each class appears in the top 10 ranking in Single Target fights",
y = "Number of Times in Top 10", x = "Class") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "Mixed")
ggplot(DPSsheet_AOE, aes(x = Class, y = Appearance, fill = Fight.Type)) +
geom_col(fill = "#54D16C") +
labs(title = "Which DPS is Best in Mixed Situations",
caption = "Times each class appears in the top 10 ranking in mixed single target and AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "Mixed")
ggplot(DPSsheet_AOE, aes(x = reorder(Class, -Appearance, FUN = sum), y = Appearance, fill = Fight.Type)) +
geom_col(fill = "#54D16C") +
labs(title = "Which DPS is Best in Mixed Situations",
caption = "Times each class appears in the top 10 ranking in mixed single target and AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "AOE")
ggplot(DPSsheet_AOE, aes(x = reorder(Class, -Appearance, FUN = sum), y = Appearance, fill = Fight.Type)) +
geom_col() +
labs(title = "Which DPS is Best in AOE Situations",
caption = "Times each class appears in the top 10 ranking in AOE fights",
y = "Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "AOE")
ggplot(DPSsheet_AOE, aes(x = reorder(Class, -Appearance, FUN = sum), y = Appearance, fill = Fight.Type)) +
geom_col() +
labs(title = "Which DPS is Best in AOE Situations",
caption = "Times each class appears in the top 10 ranking in AOE fights",
y = "Number of Times in Top 10", x="Class") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "Mixed")
ggplot(DPSsheet_AOE, aes(x = reorder(Class, -Appearance, FUN = sum), y = Appearance, fill = Fight.Type)) +
geom_col(fill = "#54D16C") +
labs(title = "Which DPS is Best in Mixed Situations",
caption = "Times each class appears in the top 10 ranking in mixed single target and AOE fights",
y = "Number of Times in Top 10", x = "Class") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(DPSsheet, aes(x = reorder(Class, -Appearance, FUN = sum), y=Appearance, fill = Fight.Type)) +
geom_col()+
labs(title = "Which DPS is Best in Each Situation", caption = "Times each class appears in the top 10 ranking per fight type", y="Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(DPSsheet, aes(x = reorder(Class, -Appearance, FUN = sum), y=Appearance, fill = Fight.Type)) +
geom_col()+
labs(title = "Which DPS is Best in Each Situation", caption = "Times each class appears in the top 10 ranking per fight type", y="Number of Times in Top 10", x ="Class") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_boxplot()+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
theme(axis.title.x = element_blank())+
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(scales))
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
library(scales)
DPSsheet<-read.csv("DataVizMidterm - Sheet1.csv")
ggplot(DPSsheet, aes(x = reorder(Class, -Appearance, FUN = sum), y=Appearance, fill = Fight.Type)) +
geom_col()+
labs(title = "Which DPS is Best in Each Situation", caption = "Times each class appears in the top 10 ranking per fight type", y="Number of Times in Top 10", x ="Class") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(DPSsheet, aes(x=Class, y=Appearance, fill = Fight.Type)) +
geom_col()+
labs(title = "Which DPS is Best in Each Situation", caption = "Times each class appears in the top 10 ranking per fight type", y="Number of Times in Top 10") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
facet_wrap(~Fight.Type)
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "AOE")
ggplot(DPSsheet_AOE, aes(x = reorder(Class, -Appearance, FUN = sum), y = Appearance, fill = Fight.Type)) +
geom_col() +
labs(title = "Which DPS is Best in AOE Situations",
caption = "Times each class appears in the top 10 ranking in AOE fights",
y = "Number of Times in Top 10", x="Class") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "Single Target")
ggplot(DPSsheet_AOE, aes(x = reorder(Class, -Appearance, FUN = sum), y = Appearance, fill = Fight.Type)) +
geom_col(fill = "#709BE1") +
labs(title = "Which DPS is Best in Single Target Situations",
caption = "Times each class appears in the top 10 ranking in Single Target fights",
y = "Number of Times in Top 10", x = "Class") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
DPSsheet_AOE <- subset(DPSsheet, Fight.Type == "Mixed")
ggplot(DPSsheet_AOE, aes(x = reorder(Class, -Appearance, FUN = sum), y = Appearance, fill = Fight.Type)) +
geom_col(fill = "#54D16C") +
labs(title = "Which DPS is Best in Mixed Situations",
caption = "Times each class appears in the top 10 ranking in mixed single target and AOE fights",
y = "Number of Times in Top 10", x = "Class") +
theme(plot.caption = element_text(hjust = .5)) +
theme(legend.position = "none")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_col(position = "stack")+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
facet_wrap(~Boss)+
theme(axis.title.x = element_blank())+
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_boxplot()+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
theme(axis.title.x = element_blank())+
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x = Class, y=DPS, fill =Class))+
geom_boxplot()+
coord_flip()+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
theme(axis.title.x = element_blank())+
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x = Boss, y=DPS, fill =Class))+
geom_boxplot()+
coord_flip()+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
theme(axis.title.x = element_blank())+
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x = Class, y=Boss, fill =Class))+
geom_boxplot()+
coord_flip()+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
theme(axis.title.x = element_blank())+
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x = DPS, y=Boss, fill =Class))+
geom_boxplot()+
coord_flip()+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
theme(axis.title.x = element_blank())+
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
ggplot(DPSsheet, aes(x = DPS, y=Boss, fill = Class))+
geom_boxplot()+
coord_flip()+
labs(title = "Top DPS by Class", caption = "DPS per class facetted by boss") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.x.bottom = element_blank())+
theme(plot.caption = element_text(hjust = .5))+
scale_y_continuous(labels = scientific_format())+
theme(axis.title.x = element_blank())+
scale_fill_manual(values = c("red", "#B01AAB", "orange", "#219864", "green", "#51CDCD", "#51CD92", "grey", "yellow", "blue", "purple", "brown"), drop = FALSE)
