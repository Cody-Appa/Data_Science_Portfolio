datadir = '/Users/codyappa/Documents/GitHub/Data_Science_Portfolio/posts/MarksChannels/'
datadir = '/Users/codyappa/Documents/GitHub/Data_Science_Portfolio/posts/MarksChannels/specranking.csv'
df = pd.read_csv('specranking.csv')
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import numpy as np; np.random.seed(22)
import seaborn as sns; sns.set(color_codes=True)
import pandas as pd
import math
datadir = '/Users/codyappa/Documents/GitHub/Data_Science_Portfolio/posts/MarksChannels/specranking.csv'
df = pd.read_csv('specranking.csv')
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.violinplot(x=df['Hpi'], y=df['Ratio'], hue=df['Treatment'], data=df, ax=ax, dodge ="True", boxprops=dict(alpha=1),linewidth=.9, scale="width", showmeans=True)
with plt.style.context('classic'):
ax.legend(loc='upper right', fontsize=10)
ax.ticklabel_format( axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.violinplot(x=df['Class'], y=df['Score'], hue=df['Parses'], data=df, ax=ax, dodge ="True", boxprops=dict(alpha=1),linewidth=.9, scale="width", showmeans=True)
with plt.style.context('classic'):
ax.legend(loc='upper right', fontsize=10)
ax.ticklabel_format( axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plot.show()
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.violinplot(x=df['Class'], y=df['Parses'], hue=df['Score'], data=df, ax=ax, dodge ="True", boxprops=dict(alpha=1),linewidth=.9, scale="width", showmeans=True)
with plt.style.context('classic'):
ax.legend(loc='upper right', fontsize=10)
ax.ticklabel_format( axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.violinplot(x=df['Score'], y=df['Parses'], hue=df['Class'], data=df, ax=ax, dodge ="True", boxprops=dict(alpha=1),linewidth=.9, scale="width", showmeans=True)
with plt.style.context('classic'):
ax.legend(loc='upper right', fontsize=10)
ax.ticklabel_format( axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.violinplot(x=df['Score'], y=df['Parses'], hue=df['Class'], data=df, ax=ax, dodge ="True", boxprops=dict(alpha=1),linewidth=.9, scale="width", showmeans=True)
with plt.style.context('classic'):
ax.legend(loc='upper right', fontsize=10)
#ax.ticklabel_format( axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.violinplot(x=df['Score'], y=df['Parses'], hue=df['Class'], data=df, ax=ax, dodge ="True", boxprops=dict(alpha=1),linewidth=.9, scale="width", showmeans=True)
with plt.style.context('classic'):
ax.legend(bbox_to_anchor=(1.05, 1), loc='upper right', fontsize=10)
#ax.ticklabel_format( axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.violinplot(x=df['Score'], y=df['Parses'], hue=df['Class'], data=df, ax=ax, dodge ="True", boxprops=dict(alpha=1),linewidth=.9, scale="width", showmeans=True)
with plt.style.context('classic'):
ax.legend(bbox_to_anchor=(3, 1), loc='upper right', fontsize=10)
#ax.ticklabel_format( axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.violinplot(x=df['Score'], y=df['Parses'], hue=df['Class'], data=df, ax=ax, dodge ="True", boxprops=dict(alpha=1),linewidth=.9, scale="width", showmeans=True)
with plt.style.context('classic'):
ax.legend(bbox_to_anchor=(2, 1), loc='upper right', fontsize=10)
#ax.ticklabel_format( axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.violinplot(x=df['Score'], y=df['Parses'], hue=df['Class'], data=df, ax=ax, dodge ="True", boxprops=dict(alpha=1),linewidth=.9, scale="width", showmeans=True)
with plt.style.context('classic'):
ax.legend(bbox_to_anchor=(1.2, 1), loc='upper right', fontsize=10)
#ax.ticklabel_format( axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.violinplot(x=df['Score'], y=df['Parses'], hue=df['Class'], data=df, ax=ax, dodge ="True", boxprops=dict(alpha=1),linewidth=.9, scale="width", showmeans=True)
with plt.style.context('classic'):
ax.legend(bbox_to_anchor=(1.5, 1), loc='upper right', fontsize=10)
#ax.ticklabel_format( axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.violinplot(x=df['Score'], y=df['Parses'], hue=df['Class'], data=df, ax=ax, dodge ="True", boxprops=dict(alpha=1),linewidth=.9, scale="width", showmeans=True)
with plt.style.context('classic'):
ax.legend(bbox_to_anchor=(1.2, 1), loc='upper right', fontsize=10)
#ax.ticklabel_format( axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
datadir = '/Users/codyappa/Documents/GitHub/Data_Science_Portfolio/posts/MarksChannels/Sheet 3-Table 1'
datadir = '/Users/codyappa/Documents/GitHub/Data_Science_Portfolio/posts/MarksChannels/Sheet 3-Table 1'
df = pd.read_csv('Sheet 3-Table 1')
datadir = '/Users/codyappa/Documents/GitHub/Data_Science_Portfolio/posts/MarksChannels/Sheet 3-Table 1'
df = pd.read_csv('Sheet 3-Table 1')
df = pd.read_csv('Sheet 3-Table 1.csv')
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Pastel'], data=df, errwidth=2, capsize=.1, linestyles='-', dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', pallete=('r', 'g'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', palette=('r', 'g'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='none', palette=('r', 'g'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='none', palette=('r'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='none', palette=('r', 'r'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='none', palette=('r', 'r'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
