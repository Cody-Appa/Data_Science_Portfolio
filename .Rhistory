import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import numpy as np; np.random.seed(22)
import seaborn as sns; sns.set(color_codes=True)
import pandas as pd
import math
datadir = '/Users/codyappa/Documents/GitHub/Data_Science_Portfolio/posts/MarksChannels/Sheet 3-Table 1'
df = pd.read_csv('Sheet 3-Table 1.csv')
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='none', palette=('orange', 'b'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', palette=('orange', 'b'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.histplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, ax=ax, linewidth=.9)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
plt.show()
plt.show()
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', palette=('orange', 'b'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
round1<-NHLDraft%>%
filter(round==1)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
NHLDraft<-read.csv("NHLDraft.csv")
NHLDictionary<-read_excel("NHLDictionary.xlsx")
glimpse(NHLDraft)
knitr::kable(NHLDictionary)
draft2022<-NHLDraft%>%
filter(draftyear==2022 & postdraft==0)
ggplot(draft2022, aes(x=round, y=NHLgames))+
geom_point()
ggplot(drafttot2018, aes(x = round, y=totgames, fill = name))+
geom_col()+
theme(legend.position = "none")+
labs(title="Games Played vs. Draft Round",x="Draft Round", y = "Games Played")+
labs(caption = "Amount of games played total vs draft round for 2018. Color indicates individual players to help with overplotting")+
theme(plot.caption = element_text(hjust=.5))
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
NHLDraft<-read.csv("NHLDraft.csv")
NHLDictionary<-read_excel("NHLDictionary.xlsx")
glimpse(NHLDraft)
knitr::kable(NHLDictionary)
draft2022<-NHLDraft%>%
filter(draftyear==2022 & postdraft==0)
ggplot(draft2022, aes(x=round, y=NHLgames))+
geom_point()
draft2022<-NHLDraft%>%
filter(draftyear==2022 & postdraft==0)
ggplot(draft2022, aes(x=round, y=NHLgames,))+
geom_boxplot(aes(group = round))+
labs(title="Games Played vs. Draft Round",x="Draft Round", y = "Games Played")+
labs(caption = "As you can see not many players drafted after round one play in their first season utilizing points, lines (bars not visible), and spatial position.")+
theme(plot.caption = element_text(hjust=.5))
draft2018<-NHLDraft%>%
filter(draftyear==2018 & postdraft<6)
ggplot(draft2018, aes(x=round, y=NHLgames))+
geom_point()
drafttot2018<- draft2018%>%
group_by(playerId, round, overall, position, name)%>%
summarise(totgames=sum(NHLgames))
ggplot(drafttot2018, aes(x=round, y=totgames))+
geom_point()
drafttot2018<- draft2018%>%
group_by(playerId, round, overall, position, name)%>%
summarise(totgames=sum(NHLgames))
ggplot(drafttot2018, aes(x=round, y=totgames,))+
geom_boxplot(aes(group = round))+
labs(title="Games Played vs. Draft Round",x="Draft Round", y = "Games Played")+
labs(caption = "A visualization demonatrating the distribution of how useful a player is based on which round they are drafted in.")+
theme(plot.caption = element_text(hjust=.5))
ggplot(drafttot2018, aes(x=overall, y=totgames))+
geom_point()
ggplot(drafttot2018, aes(x=overall, y=totgames))+
geom_line(color= "red")+
geom_point()+
labs(title="Games Played vs. Draft Round",x="Overall Pick", y = "Games Played")+
labs(caption = "The trend of overall NHL draft picks plotted against how many games they played, the lineplot supposedly helps show a downward trend from top draft picks to middle draft picks.")+
theme(plot.caption = element_text(hjust=.5))
ggplot(drafttot2018, aes(x=round, y=totgames))+
geom_point()+
geom_smooth()
ggplot(drafttot2018, aes(x = name, y=totgames))+
geom_col()
ggplot(drafttot2018, aes(x = round, y=totgames, fill = name))+
geom_col()+
theme(legend.position = "none")+
labs(title="Games Played vs. Draft Round",x="Draft Round", y = "Games Played")+
labs(caption = "Amount of games played total vs draft round for 2018. Color indicates individual players to help with overplotting")+
theme(plot.caption = element_text(hjust=.5))
ggplot(NHLDraft, aes(x = overall, y=NHLgames))+
geom_smooth()+
theme(legend.position = "none")+
labs(title="Games Played vs. Draft Round",x="Draft Round", y = "Games Played")+
labs(caption = "Amount of games played for the 2022 draft pool")+
theme(plot.caption = element_text(hjust=.5))
ggplot(NHLDraft, aes(x = postdraft, y=NHLgames, fill=(as.factor(round))))+
geom_col(position = "stack")+
labs(color = "Legend")+
labs(fill = "Draft Round")+
labs(caption = "NHL games years post draft total by round picked")+
theme(plot.caption = element_text(hjust=.5))
playedNHL2018 <- drafttot2018%>%
filter(totgames>0)
ggplot(playedNHL2018, aes(x = "", fill = factor(round))) +
geom_bar(width = 1) +
coord_polar(theta = "y")
seasonplayedNHL2018 <- draft2018%>%
filter(NHLgames>0)
ggplot(seasonplayedNHL2018, aes(x = "", fill = factor(round))) +
geom_bar(width = 1) +
coord_polar(theta = "y")+
facet_wrap(~postdraft)
ggplot(draft2018, aes(x = postdraft, y=NHLgames, fill=as.factor(round)))+
geom_col(position = "fill")
round1<-NHLDraft%>%
filter(round==1)
ggplot(NHLDraft, aes(y = NHLgames, x = overall, fill = round))+
geom_tile() +
scale_fill_gradient(low = "blue", high = "red")+
ylim(0,80)+
labs(caption = "NHL games played shows high density of round 1 picks playing many games")+
xlab("Overall Pick")
theme(plot.caption = element_text(hjust=.5))
round1<-NHLDraft%>%
filter(round==1)
ggplot(round1, aes(y = reorder(name, overall), x = postdraft, fill = NHLgames)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
NHLDraft<-read.csv("DataVizMidterm - Sheet1")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(readxl)
DPSsheet<-read.csv("DataVizMidterm - Sheet1.csv")
View(DPSsheet)
ggplot(DPSsheet, aes(x=class, y=DPS))+
geom_point()
ggplot(DPSsheet, aes(x=Boss, y=DPS))+
geom_point()
ggplot(DPSsheet, aes(x=Class, y=DPS))+
geom_point()
ggplot(DPSsheet, aes(x=Class, y=DPS))+
geom_point()
labs(title="Top DPS by class",x="Damage per second", y = "Class")+
labs(caption = "Overall dps for the top 10 of every boss in the raid")
ggplot(DPSsheet, aes(x=Class, y=DPS))+
geom_point()
labs(title="Top DPS by class",x="Damage per second", y = "Class")+
labs(caption = "Overall dps for the top 10 of every boss in the raid"))
ggplot(DPSsheet, aes(x=Class, y=DPS))+
geom_point()
labs(title="Top DPS by class",x="Damage per second", y = "Class")+
labs(caption = "Overall dps for the top 10 of every boss in the raid")
ggplot(DPSsheet, aes(x=Class, y=DPS))+
geom_point()
labs(title="Top DPS by class",x="Damage per second", y = "class")+
labs(caption = "Overall dps for the top 10 of every boss in the raid")
ggplot(DPSsheet, aes(x=Class, y=DPS))+
geom_point()
labs(title="Top DPS by class")+
labs(caption = "Overall dps for the top 10 of every boss in the raid")
ggplot(DPSsheet, aes(x=Class, y=DPS))+
geom_point()
labs(title="Top DPS by class")+
labs(caption = "Overall dps for the top 10 of every boss in the raid")+
theme(plot.caption = element_text(hjust=.5))
ggplot(DPSsheet, aes(x=Class, y=DPS))+
geom_point()
labs(title="Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid")+
theme(plot.caption = element_text(hjust=.5))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(0.5, 0.5))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, 1))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, .1))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, 200))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, .002))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(10, .002))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(.1, .002))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(.1, .0001))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(.1, 200))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(.1, .0000001))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_continuous(expand = c(0.1, 0.1))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(.1, 1))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(.001, 1))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(.001, .1))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(.001, 1))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(.001, 200))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1,2 ))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, 5))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, 20))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, 1))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, .5))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, -10))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, -100))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, -.01))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, -1))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, -50))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, -.00050))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
scale_x_discrete(expand = c(1, -.00000005))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(NHLDraft, aes(x = overall, y=NHLgames))+
geom_smooth()+
theme(legend.position = "none")+
labs(title="Games Played vs. Draft Round",x="Draft Round", y = "Games Played")+
labs(caption = "Amount of games played for the 2022 draft pool")+
theme(plot.caption = element_text(hjust=.5))+
scale_y_continuous(labels = scales::scientific())
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5))+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
scale_y_continuous(labels = scales::scientific())
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scales::scientific())
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scales::scientific())
library(scales)
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scientific_format())
library(scales)
ggplot(DPSsheet, aes(x=Class, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scientific_format())
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill=Class)) +
geom_point()
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill=Class)) +
geom_point()+
labs(color = "Legend")
ggplot(DPSsheet, aes(x=Boss, y=DPS)) +
geom_point() +
labs(title = "Top DPS by class", caption = "Overall dps for the top 10 of every boss in the raid") +
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(DPSsheet, aes(x=Boss, y=DPS)) +
geom_point()
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill=Class)) +
geom_point()
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill=Class)) +
geom_point()
scale_fill_manual(values=c("red", "green", "blue", "purple", "orange")
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill=Class)) +
geom_point()
scale_fill_manual(values=c("red", "#A624A0", "orange", "#006400", "green", "#2B919B", "grey", "yellow", "blue", "purple", "brown")
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill=Class)) +
geom_point()
scale_fill_manual(values=c("red", "#A624A0", "orange", "#006400", "green", "#2B919B", "#9FECBD" "grey", "yellow", "blue", "purple", "brown")
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill=Class)) +
geom_point()
scale_fill_manual(values=c("red", "#A624A0", "orange", "#006400", "green", "#2B919B", "#9FECBD", "grey", "yellow", "blue", "purple", "brown")
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill=Class)) +
geom_point()+
scale_fill_manual(values=c("red", "#A624A0", "orange", "#006400", "green", "#2B919B", "#9FECBD", "grey", "yellow", "blue", "purple", "brown")
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill=Class)) +
geom_point() +
scale_fill_manual(values=c("red", "#A624A0", "orange", "#006400", "green", "#2B919B", "#9FECBD", "grey", "yellow", "blue", "purple", "brown"))
class(DPSsheet$Class)
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = factor(Class)))) +
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = factor(Class))) +
geom_point() +
scale_fill_manual(values=c("red", "#A624A0", "orange", "#006400", "green", "#2B919B", "#9FECBD", "grey", "yellow", "blue", "purple", "brown"))
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = factor(Class))) +
geom_point() +
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = factor(Class))) +
geom_point()
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = factor(Class))) +
geom_point() +
scale_fill_manual(values=c("red", "#A624A0", "orange", "#006400", "green", "#2B919B", "#9FECBD", "grey", "yellow", "blue", "purple", "brown"))
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = factor(Class))) +
geom_point() +
scale_fill_manual(values=c("red", "#A624A0", "orange", "#006400", "green", "#2B919B", "#9FECBD", "grey", "yellow", "blue", "purple", "brown"))
DPSsheet$Class <- factor(DPSsheet$Class)
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = Class) +
geom_point() +
scale_fill_manual(values=c("red", "#A624A0", "orange", "#006400", "green", "#2B919B", "#9FECBD", "grey", "yellow", "blue", "purple", "brown"))
DPSsheet$Class <- factor(DPSsheet$Class)+
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = Class) +
geom_point() +
scale_fill_manual(values=c("red", "#A624A0", "orange", "#006400", "green", "#2B919B", "#9FECBD", "grey", "yellow", "blue", "purple", "brown"))
DPSsheet$Class <- factor(DPSsheet$Class)
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = Class)) +
geom_point() +
scale_fill_manual(values=c("red", "#A624A0", "orange", "#006400", "green", "#2B919B", "#9FECBD", "grey", "yellow", "blue", "purple", "brown"))
DPSsheet$Class <- factor(DPSsheet$Class)
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = Class)) +
geom_point()
DPSsheet$Class <- factor(DPSsheet$Class)
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = Class)) +
geom_point()
class(DPSsheet$Class)
DPSsheet$Class <- factor(DPSsheet$Class)
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = Class)) +
geom_point()+
labs(color = "Legend")
DPSsheet$Class <- factor(DPSsheet$Class)
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = Class)) +
geom_point()+
theme(plot.caption = element_text(hjust = .5)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = scientific_format())
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = Class)) +
geom_smooth()
ggplot(DPSsheet, aes(x=Boss, y=DPS) +
geom_smooth()
ggplot(DPSsheet, aes(x=Boss, y=DPS, fill = Class)) +
geom_line()
ggplot(DPSsheet, aes(x=Class, y=DPS, fill = Boss)) +
geom_line()
