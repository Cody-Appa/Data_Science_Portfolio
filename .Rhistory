map_data <- world_map %>%
left_join(Incidence, by = c("iso_a3" = "ISO3"))
ggplot() +
geom_sf(data = map_data_filtered, aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Prevalence") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Prevalence by Country 2010-2019") +
facet_wrap(~continent, ncol = 3)
#| output: false
library(tidyverse)
library(readxl)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
Malaria <- read.csv("National_Unit_data.csv")
Incidence<- Malaria%>%
filter(Metric == "Mortality Rate")%>%
filter(Year == "2010" | Year == "2019")%>%
mutate(Mortality = Value)%>%
select(c(ISO3, Mortality, Year))
world_map <- ne_countries(scale = "medium", returnclass = "sf")
map_data <- world_map %>%
left_join(Incidence, by = c("iso_a3" = "ISO3"))
ggplot() +
geom_sf(data = map_data, aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Prevalence") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Prevalence by Country 2010-2019") +
facet_wrap(~continent, ncol = 3)
map_data_filtered <- map_data %>%
filter(Year == "2010" | Year == "2019")
ggplot() +
geom_sf(data = map_data_filtered, aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Prevalence") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Prevalence by Country 2010-2019") +
facet_wrap(~Year, ncol = 1)
map_data_filtered <- map_data %>%
filter(Year == "2010" | Year == "2019")
ggplot() +
geom_sf(data = map_data, aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Prevalence") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Prevalence by Country 2010-2019") +
facet_wrap(~Year, ncol = 1)
map_data_filtered <- map_data %>%
filter(Year == "2010" | Year == "2019")
ggplot() +
geom_sf(data = map_data, aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Prevalence") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Prevalence by Country 2010-2019") +
facet_wrap(~continent, ncol = 1)
map_data_filtered <- map_data %>%
filter(Year == "2010" | Year == "2019")
ggplot() +
geom_sf(data = map_data, aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Prevalence") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Prevalence by Country 2010-2019") +
facet_wrap(~continent, ncol = 2)
map_data_filtered <- map_data %>%
filter(Year == "2010" | Year == "2019")
ggplot() +
geom_sf(data = map_data_filtered, aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Prevalence") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Prevalence by Country 2010-2019") +
facet_wrap(~continent, ncol = 2)
map_data_filtered <- map_data %>%
filter(continent == 'Africa')
ggplot() +
geom_sf(data = map_data_filtered, aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Prevalence") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Prevalence by Country 2010-2019") +
facet_wrap(~continent, ncol = 2)
ggplot() +
geom_sf(data = map_data%>%
filter(continent == 'Africa')
aes(fill = Mortality)) +
ggplot() +
geom_sf(data = map_data%>%
filter(continent == 'Africa')
aes(fill = Mortality)) +
ggplot() +
geom_sf(data = map_data%>%
filter(continent == 'Africa')
aes(fill = Prevalence)) +
ggplot() +
geom_sf(data = map_data%>%
filter(continent == 'Africa'),
aes(fill = Prevalence)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Prevalence") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Prevalence by Country 2010-2019") +
facet_wrap(~continent, ncol = 2)
world_map <- ne_countries(scale = "medium", returnclass = "sf")
map_data <- world_map %>%
left_join(Incidence, by = c("iso_a3" = "ISO3"))
ggplot() +
geom_sf(data = map_data%>%
filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Prevalence") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Prevalence by Country 2010-2019") +
facet_wrap(~continent, ncol = 2)
ggplot() +
geom_sf(data = map_data%>%
filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Prevalence") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
facet_wrap(~continent, ncol = 2)
world_map <- ne_countries(scale = "medium", returnclass = "sf")
map_data <- world_map %>%
left_join(Incidence, by = c("iso_a3" = "ISO3"))
#| output: false
library(tidyverse)
library(readxl)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
Malaria <- read.csv("National_Unit_data.csv")
Incidence<- Malaria%>%
filter(Metric == "Mortality Rate")%>%
filter(Year == "2010" | Year == "2019")%>%
mutate(Mortality = Value)%>%
select(c(ISO3, Mortality, Year))
ggplot() +
geom_sf(data = map_data%>%
filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
facet_wrap(~continent, ncol = 2)
ggplot() +
geom_sf(data = map_data%>%
filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
facet_wrap(~Year, ncol = 2)
ggplot() +
geom_sf(data = map_data%>%
filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
facet_wrap(~Year, ncol = 1)
ggplot() +
geom_sf(data = map_data%>%
filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
facet_wrap(~Year, ncol = 2)
#| output: false
library(tidyverse)
library(readxl)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
library(gganimate)
#| output: false
library(tidyverse)
library(readxl)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
Malaria <- read.csv("National_Unit_data.csv")
Incidence<- Malaria%>%
filter(Metric == "Mortality Rate")%>%
mutate(Mortality = Value)%>%
select(c(ISO3, Mortality, Year))
world_map <- ne_countries(scale = "medium", returnclass = "sf")
map_data <- world_map %>%
left_join(Incidence, by = c("iso_a3" = "ISO3"))
library(gganimate)
install.packages(gganimate)
install.packages(animate)
install.packages("gganimate")
#| output: false
library(tidyverse)
library(readxl)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
Malaria <- read.csv("National_Unit_data.csv")
Incidence<- Malaria%>%
filter(Metric == "Mortality Rate")%>%
mutate(Mortality = Value)%>%
select(c(ISO3, Mortality, Year))
world_map <- ne_countries(scale = "medium", returnclass = "sf")
map_data <- world_map %>%
left_join(Incidence, by = c("iso_a3" = "ISO3"))
library(gganimate)
library(transformer)
install.packages('transformer')
install.packages("transformer")
library(gganimate)
library(transformer)
library(gganimate)
library(transformr)
install.packages("transformr")
library(gganimate)
library(transformr)
ggplot() +
geom_sf(data = map_data%>%
filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
facet_wrap(~Year, ncol = 2)
library(gganimate)
library(transformr)
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
facet_wrap(~Year, ncol = 2) +
transition_time(Year)
library(gganimate)
library(transformr)
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)
library(gganimate)
library(transformr)
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)+
animate()
library(gganimate)
library(transformr)
gganimate({
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)
})
install.packages("gganimate")
install.packages("gganimate")
#| output: false
library(tidyverse)
library(readxl)
library(rnaturalearth)
library(rnaturalearthdata)
library(dplyr)
Malaria <- read.csv("National_Unit_data.csv")
Incidence<- Malaria%>%
filter(Metric == "Mortality Rate")%>%
mutate(Mortality = Value)%>%
select(c(ISO3, Mortality, Year))
world_map <- ne_countries(scale = "medium", returnclass = "sf")
map_data <- world_map %>%
left_join(Incidence, by = c("iso_a3" = "ISO3"))
library(gganimate)
library(transformr)
gganimate({
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)
})
library(gganimate)
library(transformr)
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)+
view_follow(fixed_y = TRUE) +
enter_fade() +
exit_fade()
library(gganimate)
library(transformr)
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality), crs = st_crs(map_data)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)+
view_follow(fixed_y = TRUE) +
enter_fade() +
exit_fade()
library(gganimate)
library(transformr)
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)+
view_follow(fixed_y = TRUE) +
enter_fade() +
exit_fade()
library(gganimate)
library(transformr)
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)+
view_follow(fixed_y = TRUE) +
enter_fade() +
exit_fade()
library(gganimate)
library(transformr)
# Transform map_data to match the CRS of the plot
map_data_transformed <- st_transform(map_data, crs = "+proj=longlat +datum=WGS84 +no_defs")
library(gganimate)
library(transformr)
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)+
view_follow(fixed_y = TRUE) +
enter_fade() +
exit_fade() +
animate()
library(gganimate)
library(transformr)
# Create the plot object and save it to a variable
p <- ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)+
view_follow(fixed_y = TRUE) +
enter_fade() +
exit_fade()
# Call gganimate on the plot object
gganimate(p)
library(gganimate)
library(transformr)
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)+
view_follow(fixed_y = TRUE) +
enter_fade() +
exit_fade() +
animate()
library(gganimate)
library(transformr)
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)+
view_follow(fixed_y = TRUE) +
enter_fade() +
exit_fade()
packages.install("magick")
install.packages("magick")
library(gganimate)
library(transformr)
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)+
view_follow(fixed_y = TRUE) +
enter_fade() +
exit_fade()
library(gganimate)
library(transformr)
library(magick)
ggplot() +
geom_sf(data = map_data %>% filter(continent == 'Africa'),
aes(fill = Mortality)) +
scale_fill_gradient(low = "white", high = "blue", na.value = "gray", name = "Malaria Mortality") +
theme_minimal() +
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +
labs(title = "Malaria Mortality") +
transition_time(Year)+
view_follow(fixed_y = TRUE) +
enter_fade() +
exit_fade()
install.packages("igraph")
install.packages("dplyr")
# install.packages("igraph")
library(igraph)
g <- make_empty_graph()
g <- make_graph(edges = c(1,2, 1,5), n=10, directed = FALSE)
g
g <- make_graph('Zachary')
summary(g)
plot(g)
g <- add_vertices(g, 3)
g <- add_edges(g, edges = c(1,35, 1,36, 34,37))
plot(g)
View(g)
g <- add_edges(g, edges = c(1,35, 1,36, 34,37))
plot(g)
View(g)
plot(g)
fill("red")
plot(g)
layout <- layout_with_kk(g)
layout <- layout_as_tree(g, root = 2)
layout <- layout_with_kk(g)
plot(g, layout = layout, main = "Social network with the Kamada-Kawai layout algorithm")
get.adjacency(g)
layout <- layout_with_kk(g)
layout <- layout_as_tree(g, root = 2)
layout <- layout_with_kk(g)
plot(g, layout = layout, main = "Social network with the Kamada-Kawai layout algorithm")
# install.packages("igraph")
library(igraph)
# install.packages("igraph")
library(igraph)
g <- make_empty_graph()
g <- make_graph(edges = c(1,2, 1,5), n=10, directed = FALSE)
g <- make_graph(edges = c(1,2, 1,5), n=10, directed = FALSE)
g
summary(g)
g <- make_graph('Zachary')
plot(g)
get.adjacency(g)
layout <- layout_with_kk(g)
layout <- layout_as_tree(g, root = 2)
layout <- layout_with_kk(g)
plot(g, layout = layout, main = "Social network with the Kamada-Kawai layout algorithm")
plot(g, layout = layout_with_fr,
main = "Social network with the Fruchterman-Reingold layout algorithm")
layout <- layout_in_circle(g)
plot(g, layout = layout, main = "Social network with the Kamada-Kawai layout algorithm")
layout <- layout_as_tree(g)
plot(g, layout = layout, main = "Social network with the Kamada-Kawai layout algorithm")
layout <- layout_nicely(g)
plot(g, layout = layout, main = "Social network with the Kamada-Kawai layout algorithm")
layout <- layout_as_tree(g)
plot(g, layout = layout, main = "Social network with the Kamada-Kawai layout algorithm")
plot(g, layout = layout_with_fr,
main = "Social network with the Fruchterman-Reingold layout algorithm")
V(g)$color <- ifelse(V(g)$gender == "m", "yellow", "red")
E(g) [ 3:5 %--% 5:6 ]
V(g)$gender <- c("f", "m", "f", "m", "m", "f", "m")
plot(g, layout=layout, vertex.label.dist=3.5, vertex.color=as.factor(V(g)$gender))
