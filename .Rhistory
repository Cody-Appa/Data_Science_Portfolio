with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', palette=('r', 'b'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import numpy as np; np.random.seed(22)
import seaborn as sns; sns.set(color_codes=True)
import pandas as pd
import math
datadir = '/Users/codyappa/Documents/GitHub/Data_Science_Portfolio/posts/MarksChannels/Sheet 3-Table 1'
df = pd.read_csv('Sheet 3-Table 1.csv')
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', palette=('r', 'b'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', palette=('o', 'b'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', palette=('or', 'b'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', palette=('p', 'b'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='-', palette=('orange', 'b'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='none', palette=('orange', 'orange'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, palette=('orange', 'blue'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, palette=('orange', 'blue'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, palette=('orange', 'blue'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, palette=('orange', 'blue'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, ```{python}
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.pointplot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='none', palette=('orange', 'orange'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df,
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, Dodge=True, ax=ax)
with plt.style.context('classic'):
# ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, Dodge=True, ax=ax)
with plt.style.context('classic'):
# ax.legend(loc='upper left', fontsize=10)
#ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, Dodge=True, ax=ax)
with plt.style.context('classic'):
# ax.legend(loc='upper left', fontsize=10)
#ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, Dodge=True, ax=ax)
with plt.style.context('classic'):
# ax.legend(loc='upper left', fontsize=10)
#ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, Dodge=True, ax=ax)
with plt.style.context('classic'):
# ax.legend(loc='upper left', fontsize=10)
#ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, errwidth=2, capsize=.1, linestyles='none', palette=('orange', 'orange'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, palette=('orange', 'orange'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
plt.show()
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, palette=('orange', 'orange'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
#ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, palette=('orange', 'orange'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
#ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, palette=('orange', 'orange'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
#ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
with plt.style.context('seaborn-white'):
fig, ax = plt.subplots(ncols=1)
sns.barplot()plot(x=df['hpi'], y=df['pyrG copies/ul'], hue=df['Treatment'], data=df, palette=('orange', 'orange'), dodge=True, ax=ax)
with plt.style.context('classic'):
ax.legend(loc='upper left', fontsize=10)
ax.set(ylabel='Cell Count')
#ax.ticklabel_format(axis="y", style="sci", scilimits=(0,2))
fig.set_size_inches(4, 4)
reticulate::repl_python()
